{"title":"Contributing","markdown":{"headingText":"Contributing","containsRefs":false,"markdown":"\nThank you for your interest in improving this project. This project is\nopen-source under the [MIT license](https://opensource.org/licenses/MIT)\nand welcomes contributions in the form of bug reports, feature requests,\nand pull requests.\n\nHere is a list of important resources for contributors:\n\n- [Source Code](https://github.com/aeturrell/skimpy)\n- [Documentation](https://aeturrell.github.io/skimpy/)\n- [Issue Tracker](https://github.com/aeturrell/skimpy/issues)\n- [Code of Conduct](code_of_conduct.qmd)\n\n## How to report a bug\n\nReport bugs on the [Issue Tracker](https://github.com/aeturrell/skimpy/issues).\n\nWhen filing an issue, make sure to answer these questions:\n\n- Which operating system and Python version are you using?\n- Which version of this project are you using?\n- What did you do?\n- What did you expect to see?\n- What did you see instead?\n\nThe best way to get your bug fixed is to provide a test case, and/or\nsteps to reproduce the issue.\n\n## How to request a feature\n\nRequest features on the [Issue Tracker](https://github.com/aeturrell/skimpy/issues).\n\n## How to set up your development environment\n\nYou need Python and the following tools:\n\n- [Poetry](https://python-poetry.org/)\n- [Nox](https://nox.thea.codes/)\n- [nox-poetry](https://nox-poetry.readthedocs.io/)\n- [Make](https://www.gnu.org/software/make/)\n- [Quarto](https://quarto.org/)\n\nBefore you install poetry, you may wish to run\n\n```bash\npoetry config virtualenvs.in-project true\n```\n\nto make poetry virtual environments get installed in the project folder. This makes it easier for Visual Studio Code and other IDEs to find the project kernel.\n\nInstall the package with development requirements:\n\n```bash\n$ poetry install\n```\n\nYou can now run an interactive Python session, or the command-line\ninterface:\n\n```bash\n$ poetry run python\n$ poetry run skimpy\n```\n\nTo build the documentation, you will also need [Make](https://www.gnu.org/software/make/) and [Quarto](https://quarto.org/) (these are non-Python dependencies). You can build the docs locally with `make`, which runs a command to build the README and then another to build the website. `make clean` to remove the existing README.\n\n## How to test the project\n\nRun the full test suite:\n\n```bash\n$ poetry run nox\n```\n\nList the available Nox sessions:\n\n```bash\n$ poetry run nox --list-sessions\n```\n\nYou can also run a specific Nox session. For example, invoke the unit\ntest suite like this:\n\n```bash\n$ poetry run nox --session=tests\n```\n\nUnit tests are located in the `tests` directory, and are written using\nthe [pytest](https://pytest.readthedocs.io/) testing framework.\n\nYou may need to use, for example, `poetry run nox` to ensure that the\ntests are run in the right environment.\n\nFor the pre-commit checks, use\n\n```bash\n$ poetry run pre-commit run --all-files\n```\n\n## How to submit changes\n\nOpen a [pull request](https://github.com/aeturrell/skimpy/pulls) to\nsubmit changes to this project.\n\nYour pull request needs to meet the following guidelines for acceptance:\n\n- The Nox test suite must pass without errors and warnings.\n- Include unit tests. This project aims to maintain 96% code\n  coverage.\n- If your changes add functionality, update the documentation\n  accordingly.\n- Run make to generate the new documentation.\n- Run the pre-commit suite before committing.\n\nFeel free to submit early, though---we can always iterate on this.\n\nTo run linting and code formatting checks before committing your change,\nyou can install pre-commit as a Git hook by running the following\ncommand:\n\n```bash\n$ poetry run nox --session=pre-commit -- install\n```\n\nIt is recommended to open an issue before starting work on anything.\nThis will allow a chance to talk it over with the owners and validate\nyour approach.\n\n## How to create a package release\n\n- Open a new branch with the version name\n\n- Change the version in pyproject.toml\n\n- Commit the change with a new version label as the commit message (checking the tests pass)\n\n- Head to github and merge into main\n\n- Draft a new release based on that most recent merge commit, using the new version as the tag\n\n- Confirm the release draft on gitub\n\n- The automatic release github action will push to PyPI.\n\nIf you ever need distributable files, you can use the `poetry build` command locally.\n\n## How to build the documentation\n\n- Run `make clean`\n\n- Run `make`\n\nTo upload the documentation, it's\n\n```bash\npoetry run ghp-import -n -p -f docs/_build/html\n```\n","srcMarkdownNoYaml":""},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"engine":"markdown"},"render":{"keep-tex":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true,"format-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["styles.css"],"toc":true,"output-file":"contributing.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.3.361","quartodoc":{"package":"skimpy","parser":"google","sidebar":"_sidebar.yml","sections":[{"title":"Function reference","desc":"What skimpy's functions do","contents":["skim","skim_polars","clean_columns","generate_test_data"]}]},"theme":"flatly"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}